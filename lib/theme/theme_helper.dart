import 'package:flutter/material.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme

  /// Changes the app theme to [_newTheme].




  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator


    var colorScheme = ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.deepPurple900,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.redA700,
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.lightBlueA700,
      ),
    );
  }

  /// Returns the primary colors for the current theme.


  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 14,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.blueGray500,
          fontSize: 11,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        displayMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 48,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w700,
        ),
        displaySmall: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 34,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w400,
        ),
        headlineMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 28,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w400,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 10,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w700,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA700,
          fontSize: 16,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.blueGray90001,
          fontSize: 14,
          fontFamily: 'Orbitron',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static const primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => const Color(0XFF030B15);
  Color get black90000 => const Color(0X00000000);
  Color get black90001 => const Color(0XFF000000);

  // Blue
  Color get blue70016 => const Color(0X161A7EDB);

  // BlueGray
  Color get blueGray100 => const Color(0XFFCCCCCC);
  Color get blueGray10001 => const Color(0XFFD9D9D9);
  Color get blueGray400 => const Color(0XFF888888);
  Color get blueGray500 => const Color(0XFF6A7A85);
  Color get blueGray900 => const Color(0XFF0D2644);
  Color get blueGray90001 => const Color(0XFF153050);

  // DeepPurple
  Color get deepPurple900 => const Color(0XFF1A0697);

  // Gray
  Color get gray900 => const Color(0XFF0A1727);

  // LightBlue
  Color get lightBlueA700 => const Color(0XFF0074EB);

  // LightGreen
  Color get lightGreen100 => const Color(0XFFE2F1CE);
  Color get lightGreen200 => const Color(0XFFC4E1B1);

  // Pink
  Color get pink100 => const Color(0XFFE1C5C7);

  // Red
  Color get redA700 => const Color(0XFFEB0000);

  // White
  Color get whiteA700 => const Color(0XFFFFFFFF);
}

PrimaryColors get appTheme => PrimaryColors();
ThemeData get theme => ThemeHelper().themeData();
